#!/bin/sh
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2022 Jeremy Brubaker <jbru362@gmail.com>
#
# abstract: get URL to latest LXC image for given distro and version
#
# Documentation {{{1
#
VERSION='1.0'

print_help() {
    cat <<EOF
Usage: getimgurl [OPTION] <distro-version>
Get URL to latest LXC image for a given distro and version
 -a [arch]          architecture to search (default is "amd64")
 -t [default|cloud] type of image (default is "default")
 -h                 display this help
EOF

}
print_version() {
    cat <<END >&2
$0 $VERSION
Copyright (C) 2022 Orion Arts
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jeremy Brubaker.
END
}

# Process options {{{1
arch="amd64"
type="default"
while getopts "a:t:h" opt; do
    case $opt in
        a) arch="$OPTARG" ;;
        t) type="$OPTARG" ;;
        h) print_help; exit ;;
        *) print_help; exit 1 ;;
    esac
done
shift $((OPTIND - 1))

if [ $# -eq 0 ]; then
    printf "No distro-version provided\n\n" >&2
    print_help
    exit 1
fi

baseurl="https://images.linuxcontainers.org/images"
distro="${1%-*}"
version="${1#*-}"

if [ "$distro" = "$version" ] || [ -z "$distro" ] || [ -z "$version" ]; then
    printf "%s-%s invalid!\n\n" "$distro" "$version" >&2
    print_help
    exit 1
fi

# Get URL to latest image {{{1
#
url="$baseurl/$distro/$version/$arch/$type"
links=$(curl -sSfL "$url" 2>/dev/null)
if [ $? -ne 0 ]; then
    printf "$distro/$version/$arch/$type does not exist\n" >&2
    exit 1
fi

dtg=$(echo "$links" \
          | grep '<a href.*:' \
          | sed -e 's@^.*a href.*/">@@' -e 's@/.*@@' \
          | tail -1)

imgurl="$url/$dtg/rootfs.tar.xz"
imgname="$distro-$version-$type-$arch-$dtg.tar.xz"

echo $imgurl
echo $imgname

